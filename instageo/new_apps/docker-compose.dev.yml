# Define a reusable block for backend services
x-instageo-backend-service-defaults: &backend-defaults
  environment:
    - REDIS_HOST=instageo-redis
    - REDIS_PORT=6379
    - REDIS_DB=0
  volumes:
    - ../../instageo:/app/instageo
    - shared-data:${DATA_FOLDER}

services:
  instageo-redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  instageo-backend-api:
    <<: *backend-defaults
    build:
      context: ../..         # Project root
      dockerfile: instageo/new_apps/backend/Dockerfile
      args:
        DATA_FOLDER: ${DATA_FOLDER}
        EARTHDATA_USERNAME: ${EARTHDATA_USERNAME}
        EARTHDATA_PASSWORD: ${EARTHDATA_PASSWORD}
    image: instageo-backend:dev
    depends_on:
      - instageo-redis
    ports:
      - "8000:8000"
    command: uvicorn instageo.new_apps.backend.app.main:app --host 0.0.0.0 --port 8000 --reload

  instageo-backend-data-processing-worker:
    <<: *backend-defaults
    image: instageo-backend:dev
    depends_on:
      - instageo-backend-api
    deploy:
      replicas: ${DATA_PROCESSING_WORKER_REPLICAS:-2}
    command: rq worker data-processing

  instageo-backend-model-prediction-worker:
    <<: *backend-defaults
    image: instageo-backend:dev
    depends_on:
      - instageo-backend-api
    deploy:
      replicas: ${MODEL_PREDICTION_WORKER_REPLICAS:-2}
    command: rq worker model-prediction

  instageo-backend-rq-dashboard:
    <<: *backend-defaults
    image: instageo-backend:dev
    ports:
      - "9181:9181"
    depends_on:
      - instageo-backend-api
    command: sh -c "rq-dashboard --redis-url redis://$$REDIS_HOST:$$REDIS_PORT/$$REDIS_DB --port 9181"

  instageo-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    expose:
      - "3000"
    environment:
      - REACT_APP_INSTAGEO_BACKEND_API_BASE_URL=http://localhost
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - instageo-backend-api
    stdin_open: true
    tty: true

  instageo-nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - instageo-frontend
      - instageo-backend-api

volumes:
  redis_data:
  shared-data:
