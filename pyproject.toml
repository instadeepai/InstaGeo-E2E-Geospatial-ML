[project]
name = "instageo"
version = "0.1.0"
description = "A Python framework for geospatial machine learning using open-source multispectral satellite imagery."
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = "CC-BY-NC-SA-4.0"
authors = [
  { name = "Ibrahim Salihu Yusuf", email = "i.yusuf@instadeep.com" },
  { name = "Iffanice Houndayi", email = "i.houndayi@instadeep.com" },
  { name = "Rym Oualha", email = "r.oualha@instadeep.com" },
  { name = "Mohamed Aziz Cherif", email = "m.cherif@instadeep.com" },
  { name = "Kobby Panford-Quainoo", email = "k.panford-quainoo@instadeep.com" },
  { name = "Arnu Pretorius", email = "a.pretorius@instadeep.com" },
]
keywords = ["HLS", "Sentinel-2", "gfm", "geospatial-ml", "raster", "remote-sensing", "serve", "tiling", "xarray"]
classifiers = [
  "Intended Audience :: Engineering/Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: GIS"
]

# Keep runtime minimal
dependencies = [
  "codecarbon>=3.0.0",
  "numpy>=1.24.0",
  "pandas>=2.0.0",
  "rasterio>=1.4.0",
  "rioxarray>=0.19.0",
  "scikit-learn>=1.3.0",
  "xarray[complete]>=2024.0.0",
]

[project.optional-dependencies]
# Development tools
dev = [
  "black>=25.1.0",
  "flake8>=7.3.0",
  "isort>=6.0.0",
  "jupyter>=1.1.0",
  "mypy>=1.17.0",
  "pre-commit>=4.3.0",
  "pytest-cov>=6.2.0",
  "pytest>=8.3.0",
  "setuptools>=80.9.0",
]
# Geospatial/data utilities
data = [
  "absl-py>=2.3.0",
  "astral>=3.2.0",
  "backoff>=2.2.0",
  "cartopy>=0.24.0",
  "datashader>=0.16.0",
  "earthaccess>=0.12.0",
  "geopandas>=0.14.0",
  "h5pyd>=0.18.0",
  "haversine>=2.8.0",
  "mgrs>=1.4.0",
  "planetary-computer>=1.0.0",
  "pyarrow>=18.0.0",
  "pydantic-settings>=2.7.0",
  "pydantic>=2.10.0",
  "pyproj>=3.7.0",
  "pystac-client>=0.8.0",
  "pystac>=1.11.0",
  "python-dotenv>=1.0.0",
  "ratelimit>=2.2.0",
  "seaborn>=0.13.0",
  "shapely>=2.0.0",
  "stackstac>=0.5.0",
]

# Training/inference stack
model = [
  "hydra-core>=1.3.0",
  "huggingface-hub>=0.34.0",
  "neptune>=1.14.0",
  "omegaconf>=2.3.0",
  "ray[serve]>=2.49.0",
]

# App layer
apps = [
  "dask>=2024.12.0",
  "distributed>=2024.12.0",
  "fastapi>=0.115.0",
  "matplotlib>=3.7.0",
  "plotly>=5.0.0",
  "redis>=6.2.0",
  "rq>=2.4.0",
  "rq-dashboard>=0.8.0",
  "titiler-core>=0.22.0",
  "tqdm>=4.67.0",
  "typer>=0.17.0",
  "types-redis>=4.6.0",
  "uvicorn>=0.34.0",
]

# All dependencies
all = [
  # Data dependencies
  "absl-py>=2.3.0",
  "astral>=3.2.0",
  "backoff>=2.2.0",
  "cartopy>=0.24.0",
  "datashader>=0.16.0",
  "earthaccess>=0.12.0",
  "geopandas>=0.14.0",
  "h5pyd>=0.18.0",
  "haversine>=2.8.0",
  "mgrs>=1.4.0",
  "planetary-computer>=1.0.0",
  "pyarrow>=18.0.0",
  "pydantic-settings>=2.7.0",
  "pydantic>=2.10.0",
  "pyproj>=3.7.0",
  "pystac-client>=0.8.0",
  "pystac>=1.11.0",
  "python-dotenv>=1.0.0",
  "ratelimit>=2.2.0",
  "seaborn>=0.13.0",
  "shapely>=2.0.0",
  "stackstac>=0.5.0",

  # Model dependencies
  "hydra-core>=1.3.0",
  "huggingface-hub>=0.34.0",
  "neptune>=1.14.0",
  "omegaconf>=2.3.0",
  "ray[serve]>=2.49.0",

  # Apps dependencies
  "dask>=2024.12.0",
  "distributed>=2024.12.0",
  "fastapi>=0.115.0",
  "matplotlib>=3.7.0",
  "plotly>=5.0.0",
  "redis>=6.2.0",
  "rq>=2.4.0",
  "rq-dashboard>=0.8.0",
  "titiler-core>=0.22.0",
  "tqdm>=4.67.0",
  "typer>=0.17.0",
  "types-redis>=4.6.0",
  "uvicorn>=0.34.0",
]

cpu = [
  "torch>=2.8.0",
  "torchvision>=0.23.0",
  "timm>=1.0.19",
  "ptflops>=0.7.0",
  "pytorch-lightning>=2.5.4",
]

gpu = [
  "torch>=2.8.0",
  "torchvision>=0.23.0",
  "timm>=1.0.19",
  "ptflops>=0.7.0",
  "pytorch-lightning>=2.5.4",
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "gpu" },
  ],
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-gpu", extra = "gpu", marker = "sys_platform == 'linux'" },
]
torchvision = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-gpu", extra = "gpu", marker = "sys_platform == 'linux'" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-gpu"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[project.urls]
Homepage = "https://github.com/instadeepai/InstaGeo"
Issues = "https://github.com/instadeepai/InstaGeo/issues"
Documentation = "https://github.com/instadeepai/InstaGeo#readme"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "instageo"
module-root = ""

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config"
]
markers = [
  "auth: Requires NASA EarthData Authentication",
]

[tool.coverage.run]
branch = true
source = ["instageo"]
omit = [
  "*/__init__.py",
  "*/tests/*",
]

[tool.coverage.report]
omit = [
  "*/__init__.py",
  "*_test.py",
  "*app.py",
]
exclude_lines = [
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == \"__main__\":",
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203","W503"]

[tool.mypy]
python_version = "3.11"
strict = false
warn_redundant_casts = true
disallow_untyped_defs = false
ignore_missing_imports = true
